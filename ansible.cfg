[defaults]
host_key_checking = False #so the hosts/ips can be reused
forks = 5
retries = 1

command_timeout=10 # time to wait before timing out persistent connection
# = Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}
ansible_managed = "Ansible Managed:  modified on %Y-%m-%d %H:%M:%S by {uid} on {host} // Template: {{{{ template_path|basename + lookup('pipe', 'git log --format=",%%h %%ad %%ae" -1 --date=format:"%%Y/%%m/%%d %%H:%%M" ' + template_fullpath|quote)|default(",UNCOMMITED", True) }}}}$"
fact_caching = yaml
fact_caching_timeout = 86400
fact_caching_connection = /tmp/facts_cache
gathering = smart

callbacks_enabled = timer, profile_tasks, profile_roles
stdout_callback = debug

#inventory = inventory/hosts.yml # Specify the inventory file
#host_vars_inventory = inventory/host_vars
#group_vars_inventory = inventory/group_vars

[persistent_connection]
# Controls how long the persistent connection will remain idle before it is destroyed
connect_timeout=60

[ssh_connection]
ssh_args = -o ControlMaster=auto -o ControlPersist=5m
pipelining = True


